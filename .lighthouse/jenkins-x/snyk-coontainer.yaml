apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: snyk-container
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "snyk"
    tekton.dev/displayName: "snyk-container"
spec:
  description: >-
    Snyk container security check
  workspaces:
    - name: source
      description: sources dir
  params:
    - name: IMAGE
      type: string
      description: image what should be analyzed
    - name: MONITOR_ARGS
      type: array
      description: snyk arguments
      default: [ ]
    - name: TEST_ARGS
      type: array
      description: snyk arguments
      default: [ ]
    - name: PR_ID
      type: string
      description: Pull Request ID
      default: ""
    - name: SNYK_SECRET
      type: string
      description: Secret where SNYK_TOKEN is stored
    - name: DOCKER_SOCKET_VOLUME
      type: string
      description: "Name of docker-socket volume to mount: /var/run/docker.sock"
      default: "docker-socket"
  stepTemplate:
    env:
      - name: SNYK_TOKEN
        valueFrom:
          secretKeyRef:
            name: $(params.SNYK_SECRET)
            key: SNYK_TOKEN
      - name: NOCOLOR
        value: '\033[0m'
      - name: YELLOW
        value: '\033[1;33m'
      - name: GREEN
        value: '\033[0;32m'
    volumeMounts:
      - name: $(params.DOCKER_SOCKET_VOLUME)
        mountPath: /var/run/docker.sock

  results:
    - name: monitor-url
      description: The precise URL that was fetched by this Task
    - name: status
      description: Excecution result
  steps:
    - name: snyk-container-monitor
      image: "snyk/snyk:docker"
      args:
        - "$(params.MONITOR_ARGS[*])"
      script: |
        echo -e "About to run snyk monitor for image: ${YELLOW}$(params.IMAGE)${NOCOLOR} with args: ${YELLOW}${1}${NOCOLOR}"

        snyk container monitor ${1} $(params.IMAGE) | grep -Eo '(http|https).+' > $(results.monitor-url.path)

        cat $(results.monitor-url.path)

    - name: snyk-container-test
      image: "snyk/snyk:docker"
      args:
        - "$(params.TEST_ARGS[*])"
      script: |
        if snyk container test ${1} $(params.IMAGE); then
          echo "success" > $(results.status.path)
          echo "No issues found for ${GREEN}$(params.IMAGE)${NOCOLOR} with args ${GREEN}${1}${NOCOLOR}"
        else
          echo "failed" > $(results.status.path)
        fi

    - name: snyk-container-test-comment
      image: gcr.io/jenkinsxio/jx-cli:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash

        if [[ $(cat $(results.status.path)) == "failed" ]]; then
          if [[ -n "$(params.PR_ID)" ]]; then
            SNYK_MONITOR_URL=$(cat $(results.monitor-url.path))
            COMMENT_CONTENT=$(echo -e ":x: :cursing_face: [ Snyk Container Test Failed ]($SNYK_MONITOR_URL) \nImage: [$(params.IMAGE)]()")
            jx gitops pr comment --comment="$(cat $COMMENT_CONTENT)" --pr="$(params.PR_ID)"
          fi
          echo "${YELLOW}Failing step!${NOCOLOR}"
          exit 1;
        fi
